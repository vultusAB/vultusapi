{"version":3,"file":"ngx-leaflet-draw.js","sources":["../leaflet-draw/core/leaflet-draw.directive.js","../leaflet-draw/leaflet-draw.module.js"],"sourcesContent":["import { Directive, EventEmitter, Input, Output } from '@angular/core';\nimport * as L from 'leaflet';\nimport 'leaflet-draw';\nimport { LeafletDirective, LeafletDirectiveWrapper } from '@asymmetrik/ngx-leaflet';\nvar LeafletDrawDirective = /** @class */ (function () {\n    function LeafletDrawDirective(leafletDirective) {\n        this.drawOptions = null;\n        // Configure callback function for the map\n        this.drawReady = new EventEmitter();\n        this.leafletDirective = new LeafletDirectiveWrapper(leafletDirective);\n    }\n    LeafletDrawDirective.prototype.ngOnInit = function () {\n        var _this = this;\n        this.leafletDirective.init();\n        // Initialize the draw options (in case they weren't provided)\n        this.drawOptions = this.initializeDrawOptions(this.drawOptions);\n        // Create the control\n        this.drawControl = new L.Control.Draw(this.drawOptions);\n        // Pull out the feature group for convenience\n        this.featureGroup = this.drawOptions.edit.featureGroup;\n        // Add the control to the map\n        this.leafletDirective.getMap().addControl(this.drawControl);\n        // Register the main handler for events coming from the draw plugin\n        this.leafletDirective.getMap().on(L.Draw.Event.CREATED, function (e) {\n            var layer = e.layer;\n            _this.featureGroup.addLayer(layer);\n        });\n        // Notify others that the draw control has been created\n        this.drawReady.emit(this.drawControl);\n    };\n    LeafletDrawDirective.prototype.ngOnDestroy = function () {\n        this.leafletDirective.getMap().removeControl(this.drawControl);\n    };\n    LeafletDrawDirective.prototype.ngOnChanges = function (changes) {\n        // No changes being handled currently\n    };\n    LeafletDrawDirective.prototype.getDrawControl = function () {\n        return this.drawControl;\n    };\n    LeafletDrawDirective.prototype.initializeDrawOptions = function (options) {\n        // Ensure the options have a featureGroup\n        if (null == options) {\n            options = {\n                edit: null\n            };\n        }\n        if (null == options.edit) {\n            options.edit = {\n                featureGroup: null\n            };\n        }\n        if (null == options.edit.featureGroup) {\n            // No feature group was provided, so we're going to add it ourselves\n            options.edit.featureGroup = L.featureGroup();\n            this.leafletDirective.getMap().addLayer(options.edit.featureGroup);\n        }\n        return options;\n    };\n    LeafletDrawDirective.decorators = [\n        { type: Directive, args: [{\n                    selector: '[leafletDraw]'\n                },] },\n    ];\n    /** @nocollapse */\n    LeafletDrawDirective.ctorParameters = function () { return [\n        { type: LeafletDirective, },\n    ]; };\n    LeafletDrawDirective.propDecorators = {\n        \"drawOptions\": [{ type: Input, args: ['leafletDrawOptions',] },],\n        \"drawReady\": [{ type: Output, args: ['leafletDrawReady',] },],\n    };\n    return LeafletDrawDirective;\n}());\nexport { LeafletDrawDirective };\n//# sourceMappingURL=leaflet-draw.directive.js.map","import { NgModule } from '@angular/core';\nimport { LeafletModule } from '@asymmetrik/ngx-leaflet';\nimport { LeafletDrawDirective } from './core/leaflet-draw.directive';\nvar LeafletDrawModule = /** @class */ (function () {\n    function LeafletDrawModule() {\n    }\n    LeafletDrawModule.forRoot = function () {\n        return { ngModule: LeafletDrawModule, providers: [] };\n    };\n    LeafletDrawModule.decorators = [\n        { type: NgModule, args: [{\n                    imports: [\n                        LeafletModule\n                    ],\n                    exports: [\n                        LeafletDrawDirective\n                    ],\n                    declarations: [\n                        LeafletDrawDirective\n                    ]\n                },] },\n    ];\n    return LeafletDrawModule;\n}());\nexport { LeafletDrawModule };\n//# sourceMappingURL=leaflet-draw.module.js.map"],"names":["EventEmitter","LeafletDirectiveWrapper","L.Control","L.Draw","L.featureGroup","Directive","LeafletDirective","Input","Output","NgModule","LeafletModule"],"mappings":"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"}